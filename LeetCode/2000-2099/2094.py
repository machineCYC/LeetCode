'''
2094. Finding 3-Digit Even Numbers

2021.12.05 Sunday 14:28
'''
from itertools import combinations
from typing import List


class Solution:
    def findEvenNumbers(self, digits: List[int]) -> List[int]:
        ret = set()
        for i, d in enumerate(digits):
            if d % 2 == 0:
                remainder_digits = digits[:i] + digits[i+1:]
                for dd in combinations(remainder_digits, 2):
                    if dd[0] != 0:
                        ret.add(100*dd[0] + 10*dd[1] + d)
                    if dd[1] != 0:
                        ret.add(100*dd[1] + 10*dd[0] + d)
        return sorted(list(ret))

if __name__ == "__main__":
    obj = Solution()
    assert obj.findEvenNumbers(digits = [2,1,3,0])==[102,120,130,132,210,230,302,310,312,320]
    assert obj.findEvenNumbers(digits = [2,2,8,8,2])==[222,228,282,288,822,828,882]
    assert obj.findEvenNumbers(digits = [3,7,5])==[]
    assert obj.findEvenNumbers(digits = [0,2,0,0])==[200]
    assert obj.findEvenNumbers(digits = [0,0,0])==[]
    assert obj.findEvenNumbers(digits = [5,7,2,4,8,2,6,6,0,9])==[202,204,206,208,220,224,226,228,240,242,246,248,250,252,254,256,258,260,262,264,266,268,270,272,274,276,278,280,282,284,286,290,292,294,296,298,402,406,408,420,422,426,428,450,452,456,458,460,462,466,468,470,472,476,478,480,482,486,490,492,496,498,502,504,506,508,520,522,524,526,528,540,542,546,548,560,562,564,566,568,570,572,574,576,578,580,582,584,586,590,592,594,596,598,602,604,606,608,620,622,624,626,628,640,642,646,648,650,652,654,656,658,660,662,664,668,670,672,674,676,678,680,682,684,686,690,692,694,696,698,702,704,706,708,720,722,724,726,728,740,742,746,748,750,752,754,756,758,760,762,764,766,768,780,782,784,786,790,792,794,796,798,802,804,806,820,822,824,826,840,842,846,850,852,854,856,860,862,864,866,870,872,874,876,890,892,894,896,902,904,906,908,920,922,924,926,928,940,942,946,948,950,952,954,956,958,960,962,964,966,968,970,972,974,976,978,980,982,984,986]
